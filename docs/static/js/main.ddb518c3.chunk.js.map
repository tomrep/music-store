{"version":3,"sources":["axios.js","stores/index.js","utils/loader.utils.js","stores/movies/movies.store.js","stores/movies/movies.actions.js","stores/movies/movies.views.js","components/layout/Header.js","components/layout/Menu.js","components/search/Search.js","utils/constants.js","components/movie/MoviesTable.js","pages/SearchPage.js","components/movie/MovieDetail.js","pages/MovieDetailPage.js","components/movie/MovieCard.js","pages/FavoritesPage.js","pages/NotFoundPage.js","Router.js","App.js","index.js"],"names":["instance","store","API","name","page","id","getMoviesByName","axios","get","getMovieById","Rating","types","model","source","maybe","string","value","Movie","title","year","rated","released","runtime","genre","director","writer","actors","plot","language","country","awards","ratings","optional","array","MovieStore","movies","moviesCount","number","movie","favorites","actions","self","getAllMoviesByName","flow","allMovies","Search","map","imdbID","Title","Year","parseInt","totalResults","Rated","Released","Runtime","Genre","Director","Writer","Actors","Plot","Language","Country","Awards","Ratings","rating","Source","Value","addFavorite","getSnapshot","localStorage","setItem","JSON","stringify","deleteFavorite","filter","initFavorites","getItem","applySnapshot","parse","views","isFavorite","some","AntHeader","Layout","Header","className","span","to","MenuUI","mode","theme","Item","key","type","SearchInput","handleSearch","useState","setName","handleSearchPress","a","onChange","target","onSearch","placeholder","style","width","MOVIE_COLUMNS","dataIndex","align","MoviesTable","handlePageChange","currentPage","totalCount","movieData","length","columns","dataSource","pagination","current","total","defaultProps","inject","observer","SearchPage","setCurrentPage","movieName","setMovieName","useEffect","toLowerCase","getMovies","searchMovies","MovieDetail","makeFavorite","favorite","setFavorite","getMovie","handleClick","release","size","zIndex","display","justifyContent","onClick","marginLeft","movieDetail","MovieDetailPage","match","params","MovieCard","handleFavoriteChange","FavoritesPage","gutter","xl","allFavorites","NotFound","Router","exact","from","component","path","NotFoundPage","App","Menu","Content","RootStore","create","createStore","interceptors","response","use","data","error","Promise","reject","message","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ddb518c3.chunk.js","sourcesContent":["import axios from 'axios';\n\n/* eslint-disable-next-line import/no-mutable-exports */\nexport let instance;\nexport const initializeAxios = () => {\n  instance = axios.create();\n\n  instance.interceptors.response.use(\n    response => response.data,\n\n    error => Promise.reject(error.response || error.message)\n  );\n  // instance.interceptors.request.use(\n  //   config => {\n  //     if (globals) {\n  //       globals.setLoadingsAction(true);\n  //     }\n  //     config.headers['Access-Control-Allow-Origin'] = '*';\n  //     return config;\n  //   },\n\n  //   error => Promise.reject(error)\n  // );\n};\nexport default instance;\n","import { types } from 'mobx-state-tree';\nimport { MovieStore } from './movies/movies.store';\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let store;\n\nexport function createStore() {\n  const RootStore = types.model('RootStore', {\n    movies: types.optional(MovieStore, {})\n  });\n\n  store = RootStore.create();\n  store.movies.initFavorites();\n  return store;\n}\n","import { instance as axios } from '../axios';\n\nconst apiKey = '44e85d7c';\n\nconst API = {\n  getMoviesByName: (name, page) =>\n    `http://omdbapi.com/?apikey=${apiKey}&s=${name}&page=${page}`,\n  getMovieById: id => `http://www.omdbapi.com/?apikey=${apiKey}&i=${id}`\n};\n\nexport const getMoviesByName = (name, page) =>\n  axios.get(API.getMoviesByName(name, page));\nexport const getMovieById = id => axios.get(API.getMovieById(id));\n","import { types } from 'mobx-state-tree';\n\nimport { movieStoreActions } from './movies.actions';\nimport { movieStoreViews } from './movies.views';\n\nconst Rating = types.model('Rating', {\n  source: types.maybe(types.string),\n  value: types.maybe(types.string)\n});\n\nconst Movie = types.model('Movie', {\n  id: types.maybe(types.string),\n  title: types.maybe(types.string),\n  year: types.maybe(types.string),\n  rated: types.maybe(types.string),\n  released: types.maybe(types.string),\n  runtime: types.maybe(types.string),\n  genre: types.maybe(types.string),\n  director: types.maybe(types.string),\n  writer: types.maybe(types.string),\n  actors: types.maybe(types.string),\n  plot: types.maybe(types.string),\n  language: types.maybe(types.string),\n  country: types.maybe(types.string),\n  awards: types.maybe(types.string),\n  ratings: types.optional(types.array(Rating), [])\n});\n\nexport const MovieStore = types\n  .model('MovieStore', {\n    movies: types.optional(types.array(Movie), []),\n    moviesCount: types.optional(types.number, 0),\n    movie: types.optional(Movie, {}),\n    favorites: types.optional(types.array(Movie), [])\n  })\n  .actions(movieStoreActions)\n  .views(movieStoreViews);\n","import { flow, getSnapshot, applySnapshot } from 'mobx-state-tree';\n\nimport { getMoviesByName, getMovieById } from '../../utils/loader.utils';\n\nexport const movieStoreActions = self => ({\n  getAllMoviesByName: flow(function*(name, page) {\n    const allMovies = yield getMoviesByName(name, page);\n\n    self.movies = allMovies.Search.map(movie => ({\n      id: movie.imdbID,\n      title: movie.Title,\n      year: movie.Year\n    }));\n    self.moviesCount = parseInt(allMovies.totalResults, 10);\n  }),\n  getMovieById: flow(function*(id) {\n    const movie = yield getMovieById(id);\n    self.movie = {\n      id: movie.imdbID,\n      title: movie.Title,\n      year: movie.Year,\n      rated: movie.Rated,\n      released: movie.Released,\n      runtime: movie.Runtime,\n      genre: movie.Genre,\n      director: movie.Director,\n      writer: movie.Writer,\n      actors: movie.Actors,\n      plot: movie.Plot,\n      language: movie.Language,\n      country: movie.Country,\n      awards: movie.Awards,\n      ratings: movie.Ratings.map(rating => ({\n        source: rating.Source,\n        value: rating.Value\n      }))\n    };\n  }),\n  addFavorite: movie => {\n    self.favorites = [...self.favorites, getSnapshot(movie)];\n    localStorage.setItem(\n      'favorites',\n      JSON.stringify(getSnapshot(self.favorites))\n    );\n  },\n  deleteFavorite: id => {\n    self.favorites = self.favorites.filter(movie => movie.id !== id);\n    localStorage.setItem(\n      'favorites',\n      JSON.stringify(getSnapshot(self.favorites))\n    );\n  },\n  initFavorites: () => {\n    const favorites = localStorage.getItem('favorites');\n    applySnapshot(self.favorites, JSON.parse(favorites || []));\n  }\n});\n","export const movieStoreViews = self => ({\n  get allMovies() {\n    return self.movies;\n  },\n  get totalCount() {\n    return self.moviesCount;\n  },\n  get movieDetail() {\n    return self.movie;\n  },\n  get allFavorites() {\n    return self.favorites;\n  },\n  isFavorite(id) {\n    return self.favorites.some(movie => movie.id === id);\n  }\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Row, Col, Layout } from 'antd';\n\nconst { Header: AntHeader } = Layout;\n\nconst Header = () => {\n  return (\n    <AntHeader className=\"header\">\n      <Row>\n        <Col className=\"header-brand\" span={8}>\n          <Link to=\"/\">Music Store</Link>\n        </Col>\n      </Row>\n    </AntHeader>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\n\nconst MenuUI = () => (\n  <Menu mode=\"horizontal\" theme=\"p\">\n    <Menu.Item key=\"search\">\n      <Link to=\"/search\">\n        <Icon type=\"search\" />\n        <span>Search</span>\n      </Link>\n    </Menu.Item>\n    <Menu.Item key=\"favorites\">\n      <Link to=\"/favorites\">\n        <Icon type=\"star\" />\n        <span>Favorites</span>\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n\nexport default MenuUI;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from 'antd';\n\nconst SearchInput = ({ handleSearch }) => {\n  const [name, setName] = useState('');\n\n  const handleSearchPress = async () => {\n    await handleSearch(name);\n  };\n\n  const handleTyping = ({ target }) => setName(target.value);\n\n  return (\n    <Input.Search\n      onChange={handleTyping}\n      onSearch={handleSearchPress}\n      placeholder=\"Search for movies...\"\n      style={{ width: '100%' }}\n    />\n  );\n};\n\nSearchInput.propTypes = {\n  handleSearch: PropTypes.func.isRequired\n};\n\nexport default SearchInput;\n","export const MOVIE_COLUMNS = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n    // className: 'projects-table-detail'\n  },\n\n  {\n    title: 'Year',\n    dataIndex: 'year',\n    key: 'year',\n    width: 100,\n    align: 'center'\n  }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport { observer } from 'mobx-react-lite';\nimport { Table } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { MOVIE_COLUMNS } from '../../utils/constants';\n\nconst MoviesTable = ({ movies, handlePageChange, currentPage, totalCount }) => {\n  const movieData = movies.length\n    ? movies.map(movie => {\n        return {\n          key: `movie-${movie.id}`,\n          name: <Link to={`/movie/${movie.id}`}>{movie.title}</Link>,\n          year: movie.year\n        };\n      })\n    : null;\n\n  const onPageChange = page => handlePageChange(page);\n\n  return movieData ? (\n    <Table\n      columns={MOVIE_COLUMNS}\n      dataSource={movieData}\n      pagination={{\n        current: currentPage,\n        onChange: onPageChange,\n        total: totalCount\n      }}\n    />\n  ) : null;\n};\n\nMoviesTable.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  handlePageChange: PropTypes.func.isRequired,\n  movies: PropTypes.array,\n  totalCount: PropTypes.number\n};\n\nMoviesTable.defaultProps = {\n  movies: [],\n  totalCount: 0\n};\n\nconst mapStoreToProps = ({ movies }) => ({\n  movies: movies.allMovies,\n  totalCount: movies.totalCount\n});\n\nexport default inject(mapStoreToProps)(observer(MoviesTable));\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\n\nimport SearchInput from '../components/search/Search';\nimport MoviesTable from '../components/movie/MoviesTable';\n\nconst SearchPage = ({ getAllMoviesByName }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [movieName, setMovieName] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      if (movieName !== '')\n        getAllMoviesByName(movieName.toLowerCase(), currentPage);\n    };\n    getMovies();\n  }, [movieName, currentPage, getAllMoviesByName]);\n\n  const searchMovies = async name => {\n    setMovieName(name);\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <SearchInput handleSearch={searchMovies} />\n      <MoviesTable\n        currentPage={currentPage}\n        handlePageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nSearchPage.propTypes = {\n  getAllMoviesByName: PropTypes.func\n};\n\nSearchPage.defaultProps = {\n  getAllMoviesByName: () => null\n};\nconst mapStoreToProps = ({ movies }) => ({\n  getAllMoviesByName: movies.getAllMoviesByName\n});\n\nexport default inject(mapStoreToProps)(observer(SearchPage));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Card, Icon } from 'antd';\nimport { inject } from 'mobx-react';\nimport { observer } from 'mobx-react-lite';\n\nconst MovieDetail = ({\n  movie,\n  id,\n  getMovieById,\n  isFavorite,\n  makeFavorite,\n  deleteFavorite\n}) => {\n  const [favorite, setFavorite] = useState(isFavorite(id));\n  useEffect(() => {\n    const getMovie = async () => getMovieById(id);\n    getMovie();\n  });\n\n  const handleClick = async () => {\n    if (favorite) {\n      await deleteFavorite(id);\n      setFavorite(false);\n    } else {\n      await makeFavorite(movie);\n      setFavorite(true);\n    }\n  };\n  const {\n    title,\n    year,\n    rated,\n    release,\n    runtime,\n    genre,\n    director,\n    writer,\n    actors,\n    plot,\n    language,\n    country,\n    awards,\n    ratings\n  } = movie;\n\n  return id ? (\n    <Card\n      size=\"small\"\n      style={{ zIndex: '9000' }}\n      title={\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {title}\n          <Button onClick={handleClick} size=\"small\" type=\"deafult\">\n            <Icon theme={favorite ? 'filled' : 'outlined'} type=\"star\" />\n          </Button>\n        </div>\n      }\n    >\n      <div>\n        <p>\n          <strong>Year: </strong>\n          {year}\n        </p>\n        <p>\n          <strong>Rated: </strong>\n          {rated}\n        </p>\n        <p>\n          <strong>Release: </strong>\n          {release}\n        </p>\n        <p>\n          <strong>Runtime: </strong>\n          {runtime}\n        </p>\n        <p>\n          <strong>Genre: </strong>\n          {genre}\n        </p>\n        <p>\n          <strong>Director: </strong>\n          {director}\n        </p>\n        <p>\n          <strong>Writer: </strong>\n          {writer}\n        </p>\n        <p>\n          <strong>Actors: </strong>\n          {actors}\n        </p>\n        <p>\n          <strong>Plot: </strong>\n          {plot}\n        </p>\n        <p>\n          <strong>Language: </strong>\n          {language}\n        </p>\n        <p>\n          <strong>Country: </strong>\n          {country}\n        </p>\n        <p>\n          <strong>Awards: </strong>\n          {awards}\n        </p>\n        <p>\n          <strong>Ratings: </strong>\n          {ratings.map(rating => (\n            <span\n              key={`rating-${rating.source}`}\n              style={{ marginLeft: '10px' }}\n            >\n              <strong>{rating.source}: </strong>\n              {rating.value}\n            </span>\n          ))}\n        </p>\n      </div>\n    </Card>\n  ) : (\n    <p>No movie Found</p>\n  );\n};\n\nMovieDetail.propTypes = {\n  deleteFavorite: PropTypes.func,\n  getMovieById: PropTypes.func,\n  id: PropTypes.string.isRequired,\n  isFavorite: PropTypes.func,\n  makeFavorite: PropTypes.func,\n  movie: PropTypes.object\n};\n\nMovieDetail.defaultProps = {\n  deleteFavorite: null,\n  getMovieById: null,\n  isFavorite: null,\n  makeFavorite: null,\n  movie: {}\n};\n\nconst mapStoreToProps = ({ movies }) => ({\n  movie: movies.movieDetail,\n  getMovieById: movies.getMovieById,\n  makeFavorite: movies.addFavorite,\n  deleteFavorite: movies.deleteFavorite,\n  isFavorite: movies.isFavorite\n});\n\nexport default inject(mapStoreToProps)(observer(MovieDetail));\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport MovieDetail from '../components/movie/MovieDetail';\n\nconst MovieDetailPage = ({ match }) => {\n  return (\n    <div>\n      <MovieDetail id={match.params.id} />\n    </div>\n  );\n};\n\nMovieDetailPage.propTypes = {\n  match: PropTypes.object.isRequired\n};\n\nexport default MovieDetailPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Icon } from 'antd';\n\nconst MovieCard = ({\n  id,\n  title,\n  year,\n  country,\n  runtime,\n  favorite,\n  handleFavoriteChange\n}) => {\n  const handleClick = async () => handleFavoriteChange(id);\n\n  return (\n    <Card size=\"small\">\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Link to={`/movie/${id}`}>{title}</Link>\n        <Button onClick={handleClick} size=\"small\" type=\"deafult\">\n          <Icon theme={favorite ? 'filled' : 'outlined'} type=\"star\" />\n        </Button>\n      </div>\n      <div style={{ display: 'inline-block' }}>\n        <p>\n          <strong>Year: </strong>\n          {year}\n        </p>\n        <p>\n          <strong>Country: </strong>\n          {country}\n        </p>\n        <p>\n          <strong>Runtime: </strong>\n          {runtime}\n        </p>\n      </div>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  country: PropTypes.string.isRequired,\n  favorite: PropTypes.bool.isRequired,\n  handleFavoriteChange: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  runtime: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport { observer } from 'mobx-react-lite';\n\nimport { Row, Col } from 'antd';\nimport MovieCard from '../components/movie/MovieCard';\n\nconst FavoritesPage = ({\n  movies,\n  isFavorite,\n  makeFavorite,\n  deleteFavorite\n}) => {\n  const handleFavoriteChange = async id => {\n    if (isFavorite(id)) {\n      return deleteFavorite(id);\n    }\n    return makeFavorite(id);\n  };\n  return (\n    <Row gutter={16}>\n      {movies.length\n        ? movies.map(movie => (\n            <Col className=\"mb-1\" key={`movie-col-${movie.id}`} xl={6}>\n              <MovieCard\n                country={movie.country}\n                favorite={isFavorite(movie.id)}\n                handleFavoriteChange={handleFavoriteChange}\n                id={movie.id}\n                runtime={movie.runtime}\n                title={movie.title}\n                year={movie.year}\n              />\n            </Col>\n          ))\n        : null}\n    </Row>\n  );\n};\n\nFavoritesPage.propTypes = {\n  deleteFavorite: PropTypes.func,\n  isFavorite: PropTypes.func,\n  makeFavorite: PropTypes.func,\n  movies: PropTypes.array\n};\n\nFavoritesPage.defaultProps = {\n  deleteFavorite: null,\n\n  isFavorite: null,\n  makeFavorite: null,\n  movies: []\n};\nconst mapStoreToProps = ({ movies }) => ({\n  movies: movies.allFavorites,\n  isFavorite: movies.isFavorite,\n  makeFavorite: movies.addFavorite,\n  deleteFavorite: movies.deleteFavorite\n});\n\nexport default inject(mapStoreToProps)(observer(FavoritesPage));\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>404 - Not Found</h1>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport {\n  MovieDetailPage,\n  FavoritesPage,\n  SearchPage,\n  NotFoundPage\n} from './pages';\n\nconst Router = () => (\n  <Switch>\n    <Redirect exact from=\"/\" to=\"/search\" />\n    <Route component={SearchPage} exact path=\"/search\" />\n    <Route component={MovieDetailPage} exact path=\"/movie/:id\" />\n    <Route component={FavoritesPage} exact path=\"/favorites\" />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nexport default Router;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport Header from './components/layout/Header';\nimport MenuUI from './components/layout/Menu';\nimport Router from './Router';\n\nconst App = () => (\n  <div className=\"App\">\n    <Layout>\n      <Header />\n      <MenuUI />\n      <Layout className=\"layout-height\">\n        <Layout.Content>\n          <Router />\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'mobx-react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { initializeAxios } from './axios';\n\nimport { createStore } from './stores/index';\n\n// eslint-disable-next-line\nimport 'antd/dist/antd.css';\nimport './assets/css/main.scss';\n\nimport App from './App';\n\nconst store = createStore();\n\ninitializeAxios();\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider {...store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}